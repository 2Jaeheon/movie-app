name: Test, Build, Performance and Deployment Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Start server for Lighthouse
        run: |
          npm install -g serve
          serve -s build &
        env:
          CI: true

      - name: Run Lighthouse for performance and web standards check
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: 'https://2jaeheon.site/movie-app'
          uploadArtifacts: true
          artifactName: 'lighthouse-report'

      - name: Validate HTML using W3C Validator
        run: |
          npx html-validator-cli --file ./build/index.html --verbose

      - name: Upload W3C validation results
        uses: actions/upload-artifact@v3
        with:
          name: w3c-validation
          path: './build/index.html'

  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    concurrency:
      group: ${{ github.workflow }}
      cancel-in-progress: true

    steps:
      - name: Use repository source
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Create .env.production file
        run: |
          echo "REACT_APP_KAKAO_REST_API_KEY=${{ secrets.KAKAO_REST_API_KEY }}" >> .env.production
          echo "REACT_APP_LOGIN_REDRIRECT_URI=${{ secrets.LOGIN_REDIRECT_URI }}" >> .env.production
          echo "REACT_APP_LOGOUT_REDIRECT_URI=${{ secrets.LOGOUT_REDIRECT_URI }}" >> .env.production
          echo "REACT_APP_URL=${{ secrets.APP_URL }}" >> .env.production
          echo "REACT_APP_TMDB_API_KEY=${{ secrets.TMDB_API_KEY }}" >> .env.production

      - name: Build
        run: |
          NODE_ENV=production node -r dotenv/config ./node_modules/react-scripts/scripts/build.js dotenv_config_path=.env.production
          cp ./build/index.html ./build/404.html

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: ./build

      - name: Send Slack message
        uses: 8398a7/action-slack@v3
        with:
          mention: 'here'
          if_mention: failure
          status: ${{ job.status }}
          fields: workflow,job,commit,message,ref,author,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
