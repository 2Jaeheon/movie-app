name: Test, Build, Performance and Deployment Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  # 테스트 및 빌드 작업
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Node.js 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # 의존성 설치
      - name: Install dependencies
        run: npm ci

      # 빌드 확인
      - name: Build project
        run: npm run build

  # 배포 작업
  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # Node.js 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # 의존성 설치
      - name: Install dependencies
        run: npm ci

      # PUBLIC_URL 설정
      - name: Set PUBLIC_URL
        run: echo "PUBLIC_URL=/movie-app/" > .env

      # 프로젝트 빌드
      - name: Build project
        run: |
          npm run build
          cp build/index.html build/404.html

      # gh-pages 브랜치로 배포
      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.MY_GITHUB_TOKEN }}
          publish_dir: ./build

  # Lighthouse 성능 검사
  performance-check:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      # Lighthouse 실행
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: 'https://2jaeheon.github.io/movie-app'
          uploadArtifacts: true
          artifactName: 'lighthouse-report'

      # Lighthouse 결과 업로드
      - name: Upload Lighthouse Report
        uses: actions/upload-artifact@v3
        with:
          name: lighthouse-report
          path: './lighthouse-report/'

  # Slack 알림
  notify:
    needs: [test-and-build, deploy, performance-check]
    runs-on: ubuntu-latest

    steps:
      - name: Send Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          mention: 'here'
          if_mention: failure
          status: ${{ job.status }}
          fields: workflow,job,commit,message,ref,author,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
